{"version":3,"sources":["App.module.scss","fillet-math.js","svg-helpers.js","FishFillet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sub","a","b","len2","len","Math","sqrt","dot","cross","rotateVec","vec","angle","cos","sin","closestPointOnLine","p","ab","ap","t","NONE","type","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","x","y","FishFillet","state","lineA","lineB","tanLineA","intersectionPoint","circleCenter","closePointA","closePointB","mousePoint","usedRadius","_handleMove","ev","clientX","clientY","setState","_findIntersection","_onDrag","point","propName","pointIndex","oldLine","slice","this","_mouseMove","document","addEventListener","removeEventListener","pIntersection","intersection","x1","y1","x2","y2","x3","y3","x4","y4","denom","uA","checkIntersection","filletData","pa","pb","pc","requestedRadius","vecA","vecB","crossVal","dotVal","halfAngle","atan2","lenA","lenB","tan","min","abs","s","unitA","rotated","tanPointA","tanPointB","angleA","angleB","filletCorner","arc","startAngle","endAngle","start","end","largeArcFlag","join","describeArc","width","height","version","baseProfile","viewport","xmlns","_renderLines","cx","cy","r","stroke","strokeWidth","fill","strokeOpacity","style","pointerEvents","strokeLinecap","d","_renderLine","line","linePropName","color","pointA","pointB","defaultPosition","position","onDrag","_","className","background","top","left","_renderSvg","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e36f9282.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"App-logo\":\"App_App-logo__1GLNd\",\"App-header\":\"App_App-header__3nnPn\",\"App-link\":\"App_App-link__TRj1P\"};","export const sub = (a, b) => [a[0] - b[0], a[1] - b[1]];\nexport const len2 = (a) => a[0] * a[0] + a[1] * a[1];\nexport const len = (a) => Math.sqrt(len2(a));\nexport const dot = (a, b) => a[0] * b[0] + a[1] * b[1];\nexport const cross = (a, b) => a[0] * b[1] - a[1] * b[0];\nexport const rotateVec = (vec, angle) => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return [vec[0] * cos - vec[1] * sin, vec[0] * sin + vec[1] * cos];\n};\nexport const closestPointOnLine = (p, a, b) => {\n  const ab = sub(b, a);\n  const ap = sub(p, a);\n  const len = len2(ab);\n  const dotVal = dot(ap, ab);\n  const t = dotVal / len;\n  const point = [a[0] + ab[0] * t, a[1] + ab[1] * t];\n  return point;\n};\n\nexport const NONE = { type: 'none' };\nexport function checkIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  // const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n\n  if (denom == 0) {\n    return NONE;\n  }\n\n  const uA = numeA / denom;\n  // const withinSegments = (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1)\n  const point = [x1 + uA * (x2 - x1), y1 + uA * (y2 - y1)];\n  return {\n    type: 'intersecting',\n    point,\n  };\n}\n\nexport function filletCorner(pa, pb, pc, requestedRadius) {\n  const vecA = sub(pa, pb);\n  const vecB = sub(pc, pb);\n  const crossVal = cross(vecA, vecB);\n  const dotVal = dot(vecA, vecB);\n  const angle = Math.atan2(crossVal, dotVal);\n  const halfAngle = angle / 2;\n\n  const [lenA, lenB] = [len(vecA), len(vecB)];\n  const tan = Math.tan(halfAngle);\n  const radius = Math.min(\n    requestedRadius,\n    Math.abs(tan * lenA),\n    Math.abs(tan * lenB),\n  );\n  const s = radius / Math.sin(halfAngle);\n  const unitA = [vecA[0] / lenA, vecA[1] / lenA];\n  const alongA = [unitA[0] * s, unitA[1] * s];\n\n  const rotated = rotateVec(alongA, halfAngle - Math.PI);\n  const circleCenter = [rotated[0] + pb[0], rotated[1] + pb[1]];\n\n  const tanPointA = closestPointOnLine(circleCenter, pa, pb);\n  const tanPointB = closestPointOnLine(circleCenter, pc, pb);\n\n  const offset = -90;\n  const angleA =\n    (Math.atan2(\n      tanPointA[1] - circleCenter[1],\n      tanPointA[0] - circleCenter[0],\n    ) *\n      180) /\n      Math.PI -\n    offset;\n  const angleB =\n    (Math.atan2(\n      tanPointB[1] - circleCenter[1],\n      tanPointB[0] - circleCenter[0],\n    ) *\n      180) /\n      Math.PI -\n    offset;\n\n  return {\n    radius,\n    angleA,\n    angleB,\n    tanPointA,\n    tanPointB,\n    circleCenter,\n  };\n}\n","// from https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\nexport function describeArc(x, y, radius, startAngle, endAngle) {\n  const start = polarToCartesian(x, y, radius, endAngle);\n  const end = polarToCartesian(x, y, radius, startAngle);\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n  const d = [\n    'M',\n    start.x,\n    start.y,\n    'A',\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(' ');\n\n  return d;\n}\n","import React from 'react';\nimport Draggable from 'react-draggable';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { filletCorner, checkIntersection } from './fillet-math';\nimport { describeArc } from './svg-helpers';\n\nclass FishFillet extends React.Component {\n  state = {\n    lineA: [[300, 200], [220, 50]],\n    lineB: [[400, 100], [200, 100]],\n    tanLineA: [[0, 0], [0, 0]],\n    intersectionPoint: null,\n    circleCenter: null,\n    closePointA: null,\n    closePointB: null,\n    mousePoint: null,\n    radius: 50,\n    usedRadius: 0,\n  };\n\n  componentDidMount() {\n    this._findIntersection();\n    this._mouseMove = document.addEventListener('mousemove', this._handleMove);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this._mouseMove);\n  }\n\n  _handleMove = (ev) => {\n    const mousePoint = [ev.clientX, ev.clientY];\n    this.setState({ mousePoint });\n    this._findIntersection();\n  };\n\n  _onDrag = (point, propName, pointIndex) => {\n    const oldLine = this.state[propName].slice();\n    oldLine[pointIndex] = point;\n    this.setState({ [propName]: oldLine });\n  };\n\n  _findIntersection() {\n    const { lineA, lineB, radius } = this.state;\n    const intersection = checkIntersection(\n      lineA[0][0],\n      lineA[0][1],\n      lineA[1][0],\n      lineA[1][1],\n      lineB[0][0],\n      lineB[0][1],\n      lineB[1][0],\n      lineB[1][1],\n    );\n\n    let pIntersection;\n    if (intersection.type !== 'intersecting') {\n      return;\n    }\n\n    pIntersection = [intersection.point[0], intersection.point[1]];\n    const filletData = filletCorner(lineA[0], pIntersection, lineB[0], radius);\n    const {\n      radius: usedRadius,\n      angleA,\n      angleB,\n      tanPointA,\n      tanPointB,\n      circleCenter,\n    } = filletData;\n\n    const arc = describeArc(\n      circleCenter[0],\n      circleCenter[1],\n      usedRadius,\n      angleA,\n      angleB,\n    );\n\n    this.setState({\n      closePointA: tanPointA,\n      closePointB: tanPointB,\n      usedRadius,\n      arc,\n      intersectionPoint: pIntersection,\n      circleCenter,\n    });\n  }\n\n  _renderSvg({ width, height }) {\n    return (\n      <svg\n        version=\"1.1\"\n        baseProfile=\"full\"\n        width={width}\n        height={height}\n        viewport={`${width} ${height}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g>{this._renderLines()}</g>\n      </svg>\n    );\n  }\n\n  _renderLines() {\n    const {\n      lineA,\n      lineB,\n      intersectionPoint,\n      mousePoint,\n      closePointA,\n      circleCenter,\n      closePointB,\n      radius,\n      usedRadius,\n      arc,\n    } = this.state;\n    return (\n      <g>\n        {circleCenter && (\n          <>\n            <circle\n              cx={circleCenter[0]}\n              cy={circleCenter[1]}\n              r={usedRadius || radius}\n              stroke=\"lightgrey\"\n              strokeWidth={4}\n              fill={'none'}\n              strokeOpacity={0.1}\n              style={{ pointerEvents: 'none' }}\n            />\n          </>\n        )}\n        {closePointA && (\n          <>\n            {false && mousePoint && (\n              <line\n                x1={closePointA[0]}\n                y1={closePointA[1]}\n                x2={mousePoint[0]}\n                y2={mousePoint[1]}\n                stroke={'darkred'}\n                strokeWidth={2}\n                strokeLinecap={'round'}\n              />\n            )}\n            <circle\n              cx={closePointA[0]}\n              cy={closePointA[1]}\n              r=\"6\"\n              stroke=\"none\"\n              fill={'darkred'}\n              style={{ pointerEvents: 'none' }}\n            />\n          </>\n        )}\n        {closePointB && (\n          <>\n            {false && mousePoint && (\n              <line\n                x1={closePointB[0]}\n                y1={closePointB[1]}\n                x2={mousePoint[0]}\n                y2={mousePoint[1]}\n                stroke={'darkblue'}\n                strokeWidth={2}\n                strokeLinecap={'round'}\n              />\n            )}\n            <circle\n              cx={closePointB[0]}\n              cy={closePointB[1]}\n              r=\"6\"\n              stroke=\"none\"\n              fill={'darkblue'}\n              style={{ pointerEvents: 'none' }}\n            />\n          </>\n        )}\n        {arc && (\n          <>\n            {closePointA && (\n              <line\n                x1={lineA[0][0]}\n                y1={lineA[0][1]}\n                x2={closePointA[0]}\n                y2={closePointA[1]}\n                stroke={'white'}\n                strokeWidth={6}\n                strokeLinecap={'round'}\n              />\n            )}\n            {closePointB && (\n              <line\n                x1={lineB[0][0]}\n                y1={lineB[0][1]}\n                x2={closePointB[0]}\n                y2={closePointB[1]}\n                stroke={'white'}\n                strokeWidth={6}\n                strokeLinecap={'round'}\n              />\n            )}\n            <path d={arc} stroke={'white'} strokeWidth={6} fill={'none'} />\n          </>\n        )}\n        {this._renderLine(lineA, 'lineA', 'red')}\n        {this._renderLine(lineB, 'lineB', 'blue')}\n        {intersectionPoint && (\n          <>\n            <circle\n              cx={intersectionPoint[0]}\n              cy={intersectionPoint[1]}\n              r=\"6\"\n              stroke=\"none\"\n              fill={'purple'}\n              strokeOpacity={0.1}\n              style={{ pointerEvents: 'none' }}\n            />\n          </>\n        )}\n      </g>\n    );\n  }\n\n  _renderLine(line, linePropName, color) {\n    const [pointA, pointB] = line;\n    const [x1, y1] = pointA;\n    const [x2, y2] = pointB;\n    return (\n      <g>\n        <line\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke={color}\n          strokeWidth={4}\n          strokeOpacity={0.1}\n          strokeLinecap={'round'}\n        />\n        <Draggable\n          defaultPosition={{ x: x1, y: y1 }}\n          position={{ x: x1, y: y1 }}\n          onDrag={(_, { x, y }) => this._onDrag([x, y], linePropName, 0)}\n        >\n          <circle cx={0} cy={0} r=\"8\" stroke=\"none\" fill={color} />\n        </Draggable>\n        <Draggable\n          defaultPosition={{ x: x2, y: y2 }}\n          position={{ x: x2, y: y2 }}\n          onDrag={(_, { x, y }) => this._onDrag([x, y], linePropName, 1)}\n        >\n          <circle cx={0} cy={0} r=\"4\" stroke=\"none\" fill={color} />\n        </Draggable>\n      </g>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        className=\"root\"\n        style={{\n          height: '100%',\n          background: 'grey',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n        }}\n      >\n        <ContainerDimensions>\n          {({ width, height }) => this._renderSvg({ width, height })}\n        </ContainerDimensions>\n      </div>\n    );\n  }\n}\n\nexport default FishFillet;\n","import React from \"react\";\nimport \"./App.module.scss\";\nimport FishFillet from \"./FishFillet\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FishFillet />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}